{
  "name": "velocity.java",
  "version": "1.3.1",
  "description": "Apache Velocity is a general purpose template engine. This is a nodejs wrap for Apache Velocity.",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yashiro1899/velocity.java.git"
  },
  "keywords": [
    "velocity",
    "java",
    "jre",
    "template"
  ],
  "author": {
    "name": "Ice White",
    "email": "yashiro1899@gmail.com"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/yashiro1899/velocity.java/issues"
  },
  "homepage": "https://github.com/yashiro1899/velocity.java#readme",
  "readme": "# velocity.java\n\n[![NPM](https://nodei.co/npm/velocity.java.png?downloads=true&stars=true)](https://nodei.co/npm/velocity.java/)\n\n[Apache Velocity](http://velocity.apache.org/ \"Apache Velocity\") is a general purpose template engine.    \nThis is a nodejs wrap for Apache Velocity.\n\n## Requirements\n\n* JRE 1.6 or higher\n\n## API\n\n### velocity.renderOnce(filename[, data][, root], callback)\n* _filename_ String\n* _data_ Object\n* _root_ String | Array\n* _callback_ Function\n\nRender the template specified by `filename` with `data`.\n\n`root` accepts multi-value.\nRoot(s) from which the loader loads templates.\nTemplates may live in subdirectories of this root.\n`filename` is the relative path to `root`.\n\nExample:\n\n```javascript\nvar velocity = require(\"velocity.java\");\nvelocity.renderOnce(\"example.vm\", {}, \"example/\", function(err, data) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(data.toString());\n});\n```\n\nThe callback is passed two arguments `(err, data)`,\nwhere `data` is the buffer of the rendered template.\n\n### velocity.startServer([port][, callback])\n* _port_ Number default = 12306\n* _callback_ Function\n\n`callback`, test whether the JRE exists. Then call the `callback` argument with either true or false.\n\n### velocity.stopServer()\n### velocity.render(filename[, data][, root], callback)\n* _filename_ String\n* _data_ Object\n* _root_ String | Array\n* _callback_ Function\n\nJava startup time is often much slower,\nbecause a lot of classes must be loaded before being used.\nSo, `velocity.java` provides one simple server to speed up rendering.\n`render` usually used after `startServer`. Example:\n\n```javascript\nvar velocity = require(\"velocity.java\");\nvelocity.startServer(8000);\nvelocity.render(\"example.vm\", {}, \"example/\", function(err, data) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(data.toString());\n    velocity.stopServer();\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "velocity.java@1.3.1",
  "dist": {
    "shasum": "3db6fa1936542e9f959ef6355271cecf4f1159a8"
  },
  "_from": "velocity.java@",
  "_resolved": "https://registry.npmjs.org/velocity.java/-/velocity.java-1.3.1.tgz"
}
